---
# Source: generic/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nnn
  namespace: "default"
  labels:
    helm.sh/chart: generic-0.1.0
    app.kubernetes.io/name: generic
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app.kubernetes.io/name: generic
    app.kubernetes.io/instance: nginx
---
# Source: generic/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-generic
  namespace: "default"
  labels:
    helm.sh/chart: generic-0.1.0
    app.kubernetes.io/name: generic
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: generic
      app.kubernetes.io/instance: nginx
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: generic
        app.kubernetes.io/instance: nginx
    spec:
      serviceAccountName: default
      securityContext:
        {}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: generic
              app.kubernetes.io/instance: nginx
      containers:
        - name: generic
          securityContext:
            {}
          image: "123456789012.dkr.ecr.eu-west-2.amazonaws.com/example:latest"
          imagePullPolicy: IfNotPresent
          resources:
            limits: {}
            requests: {}
          envFrom:
---
# Source: generic/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "nginx-generic-test-connection"
  labels:
    helm.sh/chart: generic-0.1.0
    app.kubernetes.io/name: generic
    app.kubernetes.io/instance: nginx
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['nginx-generic:80']
  restartPolicy: Never
